name: "Continuous Integration"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: "Build code"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout sources"
        uses: actions/checkout@v2
      - name: "Cache dependencies"
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle
            ${GITHUB_WORKSPACE}/.gradle
          key: ${{ runner.os }}-gitlab-clone-development
      - name: "Install GraalVM"
        uses: DeLaGuardo/setup-graalvm@4.0
        with:
          graalvm: '21.1.0'
          java: 'java11'
          arch: 'amd64'
      - name: "Install native-image"
        run: |
          gu install native-image
      - name: "Setup SSH"
        run: |
          mkdir -p ~/.ssh
          echo "${ssh_known_hosts}" > ~/.ssh/known_hosts
          echo "${ssh_config}" > ~/.ssh/config
          echo "${bot_devex_ssh_private_key}" > ~/.ssh/id_rsa
          chmod -R 500 ~/.ssh
        env:
          ssh_config: ${{ secrets.SSH_CONFIG }}
          ssh_known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          bot_devex_ssh_private_key: ${{ secrets.BOT_DEVEX_SSH_PRIVATE_KEY }}
      - name: "Gradle build"
        run: ./gradlew build nativeImage
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      - name: "Publish Unit Test Results"
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          files: build/test-results/test/*.xml
      - name: "Run and test native image"
        run: |
          build/native-image/application gitlab-clone-example tool-test
          [[ -f  tool-test/gitlab-clone-example/a-project/some-project-sub-module/README.md ]]
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
      - name: "Clean up"
        if: ${{ always() }}
        run: sudo rm -rf ~/.ssh
